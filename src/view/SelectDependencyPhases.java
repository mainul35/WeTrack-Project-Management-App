/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Config.ConnectionManager;
import com.JDBC.JDBCManager;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import javafx.scene.control.Alert;
import javafx.scene.control.CheckBox;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;

/**
 *
 * @author FURIOUS
 */
public class SelectDependencyPhases extends AbstractFrame {

    JPanel pnlCheckbox = new JPanel();
    static String[] users = null;
    static JCheckBox[] chkSelectPhase = null;
    static ArrayList<String> tempSelectedPhaseName = new ArrayList<>();
    static ArrayList<String> tempSelectedPhaseId = new ArrayList<>();
    private int selectedRadioIndex;
    private static JFrame frame;

    /**
     * Creates new form SelectGamePlayerRegistrationForm
     */
    public SelectDependencyPhases(long phaseId) {
        initComponents();
        frame = this;
        JDBCManager manager = ConnectionManager.getConnection();
        String sql = "select phaseName\n"
                + "from phase ph\n"
                + "where ph.phaseName is not (select phaseName from phase where phaseId = ?)\n"
                + "and ph.projectId = ?;";

        //Copied code
        ArrayList<HashMap<String, String>> al = manager.getQueryData(sql, phaseId, ShowPhasesInProject.projectId);
        int size = al.size();
        users = new String[size];
        pnlCheckbox.setLayout(new GridLayout(size, 1, 0, 2));
        JButton btnOpen = this.btnSaveDependency;
        chkSelectPhase = new JCheckBox[size];
        for (int i = 0; i < size; i++) {
            chkSelectPhase[i] = new JCheckBox();
            chkSelectPhase[i].setText(al.get(i).get("phaseName"));
            pnlCheckbox.add(chkSelectPhase[i]);
            for (int j = 0; j < tempSelectedPhaseName.size(); j++) {
                if (chkSelectPhase[i].getText().equals(tempSelectedPhaseName.get(j))) {
                    chkSelectPhase[i].setSelected(true);
                    break;
                }
            }
        }

        frame.setDefaultCloseOperation(2);
        btnSaveDependency.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    String sql = "insert into phaseDependencies(independentPhaseId, dependentPhaseId)\n"
                            + "select '" + phaseId + "', phaseId from phase where phaseName = ?;";
                    JDBCManager manager = ConnectionManager.getConnection();
                    for (int i = 0; i < chkSelectPhase.length; i++) {
                        manager.insertData(sql, chkSelectPhase[i].getText());
                    }
                    Main.showMessageDialog(Alert.AlertType.CONFIRMATION, "Success", null, "Dependencies added successfully.");
                } catch (Exception ex) {
                    Main.showMessageDialog(Alert.AlertType.ERROR, "Error", null, "Can't add this dependency.");
                }
                frame.dispose();
            }

        });

        btnClose.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpn = new javax.swing.JScrollPane(pnlCheckbox);
        btnSaveDependency = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));

        btnSaveDependency.setBackground(new java.awt.Color(255, 255, 255));
        btnSaveDependency.setText("Save");
        btnSaveDependency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDependencyActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(255, 51, 51));
        btnClose.setText("Close");

        jLabel1.setText("Please select a phase to open");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpn)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaveDependency))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 176, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scpn, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveDependency)
                    .addComponent(btnClose))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveDependencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDependencyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSaveDependencyActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnSaveDependency;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scpn;
    // End of variables declaration//GEN-END:variables
}
