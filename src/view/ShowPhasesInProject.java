/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import Config.ConnectionManager;
import com.JDBC.JDBCManager;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.HashMap;
import javafx.scene.control.CheckBox;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JScrollPane;

/**
 *
 * @author FURIOUS
 */
public class ShowPhasesInProject extends AbstractFrame {

    JPanel pnlCheckbox = new JPanel();
    static String[] users = null;
    static JRadioButton[] rdoSelectProject = null;
    static ArrayList<String> tempSelectedPhaseName = new ArrayList<>();
    static ArrayList<String> tempSelectedPhaseId = new ArrayList<>();
    static long projectId;
    /**
     * Creates new form SelectGamePlayerRegistrationForm
     */
    public ShowPhasesInProject(long projectId) {
        initComponents();
        ShowPhasesInProject.projectId = projectId;
        JFrame frame = this;
        JDBCManager manager = ConnectionManager.getConnection();
        String sql = "select phaseId, phaseName\n"
                + "from phase ph, project p\n"
                + "where p.projectId = ph.phaseId\n"
                + "and ph.projectId = '" + projectId + "';";

        //Copied code
        ArrayList<HashMap<String, String>> al = manager.getQueryData(sql);
        int size = al.size();
        users = new String[size];
        pnlCheckbox.setLayout(new GridLayout(size, 1, 0, 2));
        JButton btnOpen = this.btnEditPhase;
        rdoSelectProject = new JRadioButton[size];
        for (int i = 0; i < size; i++) {
            rdoSelectProject[i] = new JRadioButton();
            rdoSelectProject[i].setText(al.get(i).get("projectName"));
            pnlCheckbox.add(rdoSelectProject[i]);
            for (int j = 0; j < tempSelectedPhaseName.size(); j++) {
                if (rdoSelectProject[i].getText().equals(tempSelectedPhaseName.get(j))) {
                    rdoSelectProject[i].setSelected(true);
                    break;
                }
            }
        }

        frame.setDefaultCloseOperation(2);
        btnEditPhase.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                tempSelectedPhaseName.clear();
                tempSelectedPhaseId.clear();
                int size = rdoSelectProject.length;
                for (int i = 0, j = 0; i < size; i++) {
                    if (rdoSelectProject[i].isSelected() == true) {
                        tempSelectedPhaseName.add(rdoSelectProject[i].getText());
                        tempSelectedPhaseId.add(al.get(i).get("projectId"));
                        users[j++] = al.get(i).get("projectId");
                    }
                }
                frame.dispose();
                tempSelectedPhaseId.stream().forEach(System.out::println);
            }

        });

        btnCreatePhase.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent al) {
                CreatePhaseWindow cpw = new CreatePhaseWindow(projectId);
                frame.dispose();
            }
        });
        
        btnClose.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();

            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scpn = new javax.swing.JScrollPane(pnlCheckbox);
        btnEditPhase = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnCreatePhase = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 102, 255));

        btnEditPhase.setBackground(new java.awt.Color(255, 255, 255));
        btnEditPhase.setText("Edit Phase");
        btnEditPhase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPhaseActionPerformed(evt);
            }
        });

        btnClose.setBackground(new java.awt.Color(255, 51, 51));
        btnClose.setText("Close");

        jLabel1.setText("Please select a phase to open");

        btnCreatePhase.setText("Create Phase");
        btnCreatePhase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePhaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scpn)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnClose)
                        .addGap(39, 39, 39)
                        .addComponent(btnCreatePhase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(btnEditPhase))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scpn, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditPhase)
                    .addComponent(btnClose)
                    .addComponent(btnCreatePhase))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditPhaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPhaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEditPhaseActionPerformed

    private void btnCreatePhaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePhaseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreatePhaseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnCreatePhase;
    private javax.swing.JButton btnEditPhase;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane scpn;
    // End of variables declaration//GEN-END:variables
}
